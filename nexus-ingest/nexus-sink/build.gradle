buildscript {
    repositories {
        mavenCentral()
        if( project.hasProperty('artifactory_contextUrl') ) {
            maven {
                url "${artifactory_contextUrl}"
                credentials {
                    username = "${artifactory_user}"
                    password = "${artifactory_password}"
                }
            }
        }
        maven {
            url "http://repo.spring.io/plugins-snapshot"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
        maven {
            url "http://repo.spring.io/release"
        }
        maven {
            url "http://repo.spring.io/milestone"
        }
        maven {
            url "http://repo.spring.io/snapshot"
        }
        mavenCentral()
        jcenter()
    }
    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath("org.springframework.xd:spring-xd-module-plugin:1.3.1.RELEASE")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.0.RC2"
    }
}

if( project.hasProperty('artifactory_contextUrl') ) {
    allprojects {
        apply plugin: "com.jfrog.artifactory"
    }

    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        publish {
            repository {
                repoKey = "${publish_repoKey}"
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true

            }
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                // Publish generated POM files to Artifactory (true by default)
                publishPom = true
            }
        }
        resolve {
            repository {
                repoKey = "${resolve_repoKey}"
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true

            }
        }
    }

    repositories {
        maven {
            url "$artifactory_contextUrl/$resolve_repoKey"
            credentials {
                username "${artifactory_user}"
                password "${artifactory_password}"
            }
        }
    }

    artifactoryPublish.dependsOn bootRepackage

}else {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "http://repo.spring.io/release"
        }
        mavenLocal()
    }
}

ext {
    springXdVersion = '1.3.1.RELEASE'
    springIntegrationDslVersion = '1.1.2.RELEASE'
    springDataCassandraVersion = '1.3.4.RELEASE'
    springDataSolrVersion = '2.0.2.RELEASE'

    nexusMessagesVersion = '1.0.0.RELEASE'

    testversions = [
        cassandraUnitVersion: '2.1.3.1',
        solrCoreVersion: '5.3.1'
    ]
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-xd-module'
apply plugin: 'maven-publish'
apply plugin: "io.spring.dependency-management"

group = 'org.nasa.jpl.nexus.ingest'
version = '1.4-SNAPSHOT'
mainClassName = ''

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

//noinspection GroovyAssignabilityCheck
sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        groovy {
            // override the default locations, rather than adding additional ones
            srcDirs = ['src/main/groovy', 'src/main/java']
        }
        java {
            srcDirs = [] // don't compile Java code twice
        }
    }
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.77+'
    }
}

//noinspection GroovyAssignabilityCheck
dependencies {
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile "org.springframework.integration:spring-integration-java-dsl:${springIntegrationDslVersion}"
    compile "org.nasa.jpl.nexus:nexus-messages:${nexusMessagesVersion}"
    compile "org.springframework.data:spring-data-cassandra:${springDataCassandraVersion}"
    compile("org.springframework.data:spring-data-solr:${springDataSolrVersion}"){
        exclude group: 'org.apache.solr', module: 'solr-solrj'
    }
    compile "org.apache.solr:solr-solrj:5.3.1"
    compile 'org.codehaus.groovy:groovy'

    compile 'com.amazonaws:aws-java-sdk-s3'
    compile 'com.amazonaws:aws-java-sdk-dynamodb'
    testCompile 'io.findify:s3mock_2.12:0.2.3'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.apache.cassandra:cassandra-all")
    testCompile("org.apache.solr:solr-core:${testversions.solrCoreVersion}"){
        exclude group: 'org.eclipse.jetty'
    }
    testCompile("com.vividsolutions:jts:1.13")
    testCompile("org.cassandraunit:cassandra-unit-spring:${testversions.cassandraUnitVersion}") {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


task buildScriptDependencies(type: org.gradle.api.tasks.diagnostics.DependencyReportTask) {
    configurations = project.buildscript.configurations
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
