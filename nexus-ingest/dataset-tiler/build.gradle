buildscript {
    repositories {
        maven {
            url "http://repo.spring.io/plugins-snapshot"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
        maven {
            url "http://repo.spring.io/release"
        }
        maven {
            url "http://repo.spring.io/milestone"
        }
        maven {
            url "http://repo.spring.io/snapshot"
        }
        jcenter()
        mavenCentral()
    }
    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath("org.springframework.xd:spring-xd-module-plugin:1.3.1.RELEASE")
    }
}

ext {
    springXdVersion = '1.3.1.RELEASE'
    springIntegrationDslVersion = '1.1.2.RELEASE'
    netcdfJavaVersion = '4.6.3'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-xd-module'

group = 'org.nasa.jpl.nexus.ingest'
version = '1.0.0.BUILD-SNAPSHOT'
mainClassName = ''

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url "http://repo.spring.io/release"
    }
    mavenCentral()
    jcenter()
    maven {
        url "http://repo.spring.io/snapshot"
    }
    maven {
        url "http://repo.spring.io/milestone"
    }
    maven {
        url "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/"
    }
}

//noinspection GroovyAssignabilityCheck
sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        groovy {
            // override the default locations, rather than adding additional ones
            srcDirs = ['src/main/groovy', 'src/main/java']
        }
        java {
            srcDirs = [] // don't compile Java code twice
        }
    }
}

//noinspection GroovyAssignabilityCheck
dependencies {
    compile("org.springframework.integration:spring-integration-java-dsl:${springIntegrationDslVersion}")
    compile "edu.ucar:cdm:${netcdfJavaVersion}"
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile('org.codehaus.groovy:groovy')

    provided "javax.validation:validation-api"

    testCompile("org.springframework.boot:spring-boot-starter-test")
}


task buildScriptDependencies(type: org.gradle.api.tasks.diagnostics.DependencyReportTask) {
    configurations = project.buildscript.configurations
}





















task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
