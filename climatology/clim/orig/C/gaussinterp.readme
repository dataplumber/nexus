05 Oct 00
ed armstrong	NASA/JPL/Caltech

`gaussinterp' is a program designed to spatially and temporally
interpolate SST pathfinder data using gaussian methodology. This
description is for the C version. To run the program from the command
line:

% gaussinterp <infile> <beg_rec> <parmfile> <outfile> 

where
	infile = file containing list of files to process 
	(ascii; fixed length records; temporally sorted from 
	old to recent)
	beg_rec = first record (file) in infile processed
	parmfile = input parameter file
	outfile = interpolated output file (ascii or binary)


`infile' must be ascii with a fixed record length of 150 bytes. Use
`pad.pl' to convert variable or other fixed record length files to
150.  `infile' records should be in monotonically ascending in time
(year and julian day). beg_rec is the record number of the temporal
start of the interpolation. The day for the file corresponding to this
record number is also the first map center date. The next map center is
'first_map_center' + time_step (parameter dz; see parameter file
description) and so forth.  `outfile' can be either an ascii or binary
file, sequential or interleaved format; see below for more
information.  `parmfile' is an ascii file read by the program that
contains many interpolation and output parameters.


** Parameter file description **

~~~~ example of parameter file: ~~~~~
200000
720 360
10
3.0 3.0 20.0
1.0 1.0 10.0
1.0 1.0  8.0
-180. 180. 
-90. 90.
sequential
unformatted
1
1
6
~~~~ end example ~~~~

record 1: ndatamax = maximum points in each file
       2: xlength, y_length = HDF data array: cols and rows
       3: kmax = number of "maps" or time "steps"  
       4: xwin2, ywin2, zwin2 = longitude, latitude "search" 
	  range (decimal degrees), time search range (days)
       5: xh, yh, zh = e folding scaling for long, lat (decimal
		       degrees) and time (days) 
       6: dx, dy, dz = longitude, latitude interpolation 
	  	       step (decimal degrees), and 
		       time step (days)
       7: xlo, xhi = minimum, maximum longitude (-180 to 180 decimal degrees)
       8: ylo, yhi = minimum, maximum latitude (-90 to 90 decimal degrees)
       9: 'interleave' or 'sequential' map format 
      10: 'formatted' (ascii) or 'unformatted' (binary) output file
      11: cloud erosion flag: 1=cloud erosion; 0=no cloud erosion
      12: all pixel data flag: 1="all pixel data"; 0="best pixel" data
      13: quality flag value: quality flag value (0-7) to use for "all pixel" data; 
			    ignored if "best pixel" data used


Some notes on the parameter file: 

	* ndatamax should be x_length*y_length but in reality is much
	less since much of the data are missing due to clouds.

	* the user can subset into the image array by choosing proper
	xlo, xhi, ylo, yhi. xlo must always be less than xhi; the same
	for ylo and yhi.

	* interleave format refers to each row in the output file
	representing a unique lon, lat position with columns of
	associated sst values (maps) 
	i.e. row one: lon1 lat1 sst1 sst2 sst3....lastsst 
	     row two: lon2 lat1 sst1 sst2 sst3....lastsst

	* sequential format refers to each map written as rows and
	columns of lat, lon with the array element representing the sst
	at that geo-position for that map. Each map is written
	sequentially in the output file.

	* generally unformatted (binary) output should be chosen as
	this results in a smaller output file size. Using binary format
	each pixel is written as a 1 byte char (0-255).

	* cloud erosion refers to the Casey cloud erosion algorithm
	used in the NSIPP (Casey) Pathfinder climatology. 


** Header description **

For each output format a header is written:
     	ASCII format:
	record 1: some text
	record 2: imax, jmax, kmax
		imax = width of output in pixels
		jmax = height of output in pixels 
		kmax = number of "maps" or images
        record 3: xwin2, ywin2, zwin2
		spatial and temporal search "radii" 
		in decimal degrees and days
        record 4: xh, yh, zh
		e folding scales in decimal degrees
	record 5: dx,dy,dz
		interpolation intervals
		in decimal degrees
	record 6: ULx, ULy, LRx, LRy
		upper left and lower right longitude
		and latitudes in decimal degrees
        record 7: date.startdate, date.enddate
		first and last map center dates in
		YYYYDDD (e.g., 1995010)

        BINARY (C) [word is 4 bytes, types are indicated]: 
		word 1 [char]: magic number
		words 2-4 [int]: imax, jmax, kmax
		words 5-7 [float]: xwin2, ywin2, zwin2
		words 8-10 [float]: xh, yh, zh
		words 11-13 [float]: dx,dy,dz
		words 14-17 [float]: ULx, ULy, LRx, LRy
		word 18 [int]: first map center date
		word 19 [int]: last map center date
		[total header size is 76 bytes]

** Additional information **

- The parameter file can be edited to change/update all entries but
care must be taken to avoid typos. The program is compiled for a fixed
record length for the input datafile. These can be modified in
`interp.h' and the program recompiled.

- In the case of global interpolation where xlo=-180 and xhi=180, the
program will correctly interpolate across longitude 180 East (all_zones
is true). That is, there is no "cutoff" in the interpolation if the
search window for a particular satellite pixel crosses this longitude.
In all other cases this is not so.  For example, if xlo=-180 and
xhi=-150, interpolations in the vicinity of longitude -180 are "cutoff"
at this boundary, i.e., points west of -180 do not contribute to the
interpolation.  Since this is a regional subset, the interpolations are
also "cutoff" in the vicinity of longitude -150 (data east of -150 do
not contribute). By extension this is also true for a subset in
latitude.

- The first line in the usage dump (type gaussinterp with no arguments)
will specify if the executable is from Fortran or C code.

- Sample parameter files can be found in
/sst/vol7/PATHFINDER/interp/parmfiles .  Datafile lists can be found in
/sst/vol7/PATHFINDER/interp/avhrrlists .

